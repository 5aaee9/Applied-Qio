buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '0.0.1'
group = 'me.indexyz.minecraft.ae2qio' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'applied-qio'

java.toolchain.languageVersion = JavaLanguageVersion.of(11) // Mojang ships Java 8 to end users, so your mod should target Java 8.

repositories {
    maven {
        name = "Modmaven"
        url = uri("https://modmaven.dev/")

        content {
            includeGroup("appeng")
            includeGroup("mekanism")
        }
    }

}

mixin {
    add sourceSets.main, 'ae2qio.mixins.refmap.json'
    config 'ae2qio.mixins.json'
    debug.verbose = true
    debug.export = true
}

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'

    def commonRunProperties = {
        workingDirectory(project.file("run"))
        arg "-mixin.config=ae2qio.mixins.json"

        property("forge.logging.console.level", "debug")
        property("fml.earlyprogresswindow", "false")

        // See https://github.com/Vazkii/Patchouli#mixin-troubleshooting
        property("mixin.env.remapRefMap", "true")
        property("mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg")
        // property "mixin.debug.export", "true"

        mods {
            appmek {
                source(sourceSets.main)
            }
        }
    }

    runs {
        client {
            with(commonRunProperties)
        }

        server {
            with(commonRunProperties)
        }

        data {
            with(commonRunProperties)
            forceExit false
            args '--mod', 'appqio', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets {
    main {
        ext.refMap = "mixins.ae2qio.refmap.json"
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.35'
    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
    implementation 'org.jetbrains:annotations:23.0.0'

    implementation(fg.deobf("appeng:appliedenergistics2:${ae2_version}"))
    compileOnly(fg.deobf("mekanism:Mekanism:${minecraft_version}-${mekanism_version}:all"))
    runtimeOnly(fg.deobf("mekanism:Mekanism:${minecraft_version}-${mekanism_version}:all"))
}

jar {
    manifest {
        attributes([
            "Specification-Title": "ae2-qio",
            "Specification-Vendor": "AE2-QIO",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "ae2qio.mixins.json",
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'FMLCorePluginContainsFMLMod': 'true',
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
